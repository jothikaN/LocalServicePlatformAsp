//// <auto-generated />
//using LocalServicePlatform.Infrastructure.Common;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Migrations;

//namespace LocalServicePlatform.Infrastructure.Migrations
//{
//    [DbContext(typeof(ApplicationDbContext)), Migration("20240513110714_taskerdet")]
//    internal class taskerdetBase
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.4")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.AppUser", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("Address")
//                        .HasColumnType("nvarchar(200)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("FirstName")
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<string>("LastName")
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<int>("Location")
//                        .HasColumnType("int");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("bit");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetimeoffset");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PhoneNumber")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("bit");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex")
//                        .HasFilter("[NormalizedUserName] IS NOT NULL");

//                    b.ToTable("AspNetUsers", (string)null);
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Bookings", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("Location")
//                        .HasColumnType("int");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("SType")
//                        .HasColumnType("int");

//                    b.Property<Guid>("ServiceCategoryId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<Guid>("ServiceId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("WType")
//                        .HasColumnType("int");

//                    b.HasKey("Id");

//                    b.HasIndex("ServiceCategoryId");

//                    b.HasIndex("ServiceId");

//                    b.HasIndex("UserId");

//                    b.ToTable("Bookings");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.PopularPro", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("PriceDescription")
//                        .HasColumnType("int");

//                    b.Property<string>("ProImage")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ProName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("PopularPros");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Post", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Name")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("ServiceCategoryId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<float>("ServiceChargePerHour")
//                        .HasColumnType("real");

//                    b.Property<Guid>("ServiceId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("ServiceImage")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("ServiceType")
//                        .HasColumnType("int");

//                    b.HasKey("Id");

//                    b.HasIndex("ServiceCategoryId");

//                    b.HasIndex("ServiceId");

//                    b.ToTable("Post");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.ServiceCategories", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("ServiceCategories");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Services", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Description")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ServicePic")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("Services");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Taskers", b =>
//                {
//                    b.Property<Guid>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CreatedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("Location")
//                        .HasColumnType("int");

//                    b.Property<string>("ModifiedBy")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("ModifiedOn")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Name")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<float>("PhoneNumber")
//                        .HasColumnType("real");

//                    b.Property<string>("SelectedServices")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("ServiceCategoryId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<Guid>("ServiceId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("TaskerId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("TaskerImage")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("TaskersId")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.HasIndex("ServiceCategoryId");

//                    b.HasIndex("ServiceId");

//                    b.HasIndex("TaskerId");

//                    b.ToTable("Taskers");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex")
//                        .HasFilter("[NormalizedName] IS NOT NULL");

//                    b.ToTable("AspNetRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("RoleId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetRoleClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ProviderKey")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserLogins", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetUserRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("Name")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("Value")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("AspNetUserTokens", (string)null);
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Bookings", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.ServiceCategories", "ServiceCategories")
//                        .WithMany()
//                        .HasForeignKey("ServiceCategoryId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.Services", "Services")
//                        .WithMany()
//                        .HasForeignKey("ServiceId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", "appUser")
//                        .WithMany()
//                        .HasForeignKey("UserId");

//                    b.Navigation("ServiceCategories");

//                    b.Navigation("Services");

//                    b.Navigation("appUser");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Post", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.ServiceCategories", "ServiceCategories")
//                        .WithMany()
//                        .HasForeignKey("ServiceCategoryId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.Services", "Services")
//                        .WithMany()
//                        .HasForeignKey("ServiceId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("ServiceCategories");

//                    b.Navigation("Services");
//                });

//            modelBuilder.Entity("LocalServicePlatform.Domain.Models.Taskers", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.ServiceCategories", "ServiceCategories")
//                        .WithMany()
//                        .HasForeignKey("ServiceCategoryId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.Services", "Services")
//                        .WithMany()
//                        .HasForeignKey("ServiceId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", "appUser")
//                        .WithMany()
//                        .HasForeignKey("TaskerId");

//                    b.Navigation("ServiceCategories");

//                    b.Navigation("Services");

//                    b.Navigation("appUser");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.HasOne("LocalServicePlatform.Domain.Models.AppUser", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}